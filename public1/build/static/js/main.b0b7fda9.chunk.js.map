{"version":3,"sources":["context/AppReducer.tsx","context/GlobalState.tsx","component/AccountSummary.tsx","component/AddTransaction.tsx","component/Balance.tsx","component/Header.tsx","component/Transaction.tsx","component/TransactionHistory.tsx","firebase.ts","App.tsx","index.tsx","swDev.js"],"names":["AppReducer","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","Provider","value","delTransaction","addTransaction","AccountSummary","transactionAmounts","useContext","map","transactionAmount","income","reduce","acc","toFixed","expense","Math","abs","className","AddTransaction","useState","description","setDescription","setTransactionAmount","onSubmit","e","preventDefault","newTransaction","Date","getTime","htmlFor","placeholder","onChange","target","Balance","balance","item","Header","Transaction","sign","transactionType","onClick","TransactionHistory","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","messaging","App","Notification","requestPermission","then","permission","getToken","currentToken","alert","prompt","console","log","catch","err","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","register","registration","scope"],"mappings":"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","file":"static/js/main.b0b7fda9.chunk.js","sourcesContent":["const AppReducer=(state:any, action:any) => {\r\n    switch(action.type) {\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions\r\n                    .filter((transaction : {id:any}) => transaction.id !== action.payload)\r\n            }\r\n        case 'ADD_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: [action.payload, ...state.transactions]\r\n            }\r\n        default:\r\n            return state;\r\n    };\r\n}\r\nexport default AppReducer;","import React, { createContext, useReducer } from 'react';\r\n\r\n// Import the Reducer\r\nimport AppReducer from './AppReducer';\r\n\r\n// Create the initial state\r\nconst initialState : any = {\r\n    transactions: []\r\n}\r\n\r\n// Create the Global Context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Create a Provider for the Global Context\r\nexport const GlobalProvider = ({ children }:any) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    // Actions for Transactions\r\n\r\n        // Delete Existing Transaction Action\r\n        function delTransaction(id:number) {\r\n            dispatch({\r\n                type: 'DELETE_TRANSACTION',\r\n                payload: id\r\n            });\r\n        }\r\n\r\n        // Add New Transaction Action\r\n        function addTransaction(transaction:any) {\r\n            dispatch({\r\n                type: 'ADD_TRANSACTION',\r\n                payload: transaction\r\n            })\r\n        }\r\n\r\n    return (\r\n        <GlobalContext.Provider value={\r\n            {\r\n                transactions: state.transactions,\r\n                delTransaction,\r\n                addTransaction\r\n            }\r\n        }>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    );\r\n\r\n}","import React, { useContext } from 'react'\r\nimport { GlobalContext} from '../context/GlobalState'\r\n\r\nexport const AccountSummary = () => {\r\n\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n    const transactionAmounts = transactions.map((transaction:{transactionAmount:any}) => transaction.transactionAmount);\r\n\r\n    const income = transactionAmounts\r\n        .filter((transaction:number) => transaction > 0)\r\n        .reduce((acc : number, transaction:number) => (acc += transaction), 0)\r\n        .toFixed(2);\r\n\r\n    const expense = Math.abs(transactionAmounts\r\n        .filter((transaction:number) => transaction < 0)\r\n        .reduce((acc : number, transaction: number) => (acc += transaction), 0)\r\n        ).toFixed(2);\r\n\r\n\r\n    return (\r\n        <div className='inc-exp-container'>\r\n            <div>\r\n                <h4>Income</h4>\r\n                <p className='money plus'>\r\n                    {income}\r\n                </p>\r\n            </div>\r\n            <div>\r\n                <h4>Expense</h4>\r\n                <p className='money minus'>\r\n                    {expense}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState, useContext } from 'react'\r\nimport { GlobalContext} from '../context/GlobalState'\r\n\r\nexport const AddTransaction = () => {\r\n\r\n    const [description, setDescription]:any = useState()\r\n    const [transactionAmount, setTransactionAmount]:any = useState()\r\n\r\n    const { addTransaction } = useContext(GlobalContext);\r\n\r\n\r\n    const onSubmit = (e: {preventDefault:()=> void}) =>{\r\n        e.preventDefault();\r\n\r\n        const newTransaction:{id:number, description:any, transactionAmount:number} = {\r\n            id: new Date().getTime(),\r\n            description,\r\n            transactionAmount: +transactionAmount\r\n        }\r\n\r\n        addTransaction(newTransaction);\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3>Add Transaction</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <div className='from-control'>\r\n                    <label htmlFor='description'>\r\n                        Description\r\n                    </label>\r\n                    <input \r\n                        type='text' \r\n                        id='description' \r\n                        placeholder='Detail of transaction'\r\n                        value={description}\r\n                        onChange = {(e) => setDescription(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div className='from-control'>\r\n                    <label htmlFor='transactionamount'>\r\n                        Transaction Amount\r\n                    </label>\r\n                    <input  type='text' \r\n                            id='transactionamount' \r\n                            placeholder='Enter transaction amount'\r\n                            value={transactionAmount}\r\n                            onChange={(e) => setTransactionAmount(e.target.value)}\r\n                    />\r\n                </div>\r\n                <button className='btn'>\r\n                    Add Transaction\r\n                </button>\r\n            </form>\r\n            \r\n        </div>\r\n    )\r\n}","import React, {useContext} from 'react'\r\nimport { GlobalContext} from '../context/GlobalState'\r\n\r\n\r\nexport const Balance = () => {\r\n\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n    const transactionAmounts = transactions.map((transaction:{transactionAmount:any}) => transaction.transactionAmount);\r\n    const balance = transactionAmounts.reduce((acc:number, item:number) => (acc += item), 0).toFixed(2);\r\n\r\n    return (\r\n        <div>\r\n            <h4>Current Balance</h4>\r\n            <h1 id=\"balance\">${balance}</h1>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <h1>\r\n            Expense Track App By M.HAMMAD\r\n        </h1>\r\n    )\r\n}","import React, { useContext } from 'react'\r\n\r\n// Import the Global State\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const Transaction = ({ transaction }:any) => {\r\n\r\n    const { delTransaction } = useContext(GlobalContext);\r\n\r\n    const sign = transaction.transactionAmount > 0 ? '+' : '-';\r\n    const transactionType = transaction.transactionAmount > 0 ? 'plus' : 'minus';\r\n\r\n    return (\r\n        <li className={transactionType}>\r\n            {transaction.description}\r\n            <span>{sign}${Math.abs(transaction.transactionAmount)}</span>\r\n            <button className=\"delete-btn\"\r\n                    onClick={() => delTransaction(transaction.id)}>\r\n                X\r\n            </button>\r\n        </li>\r\n    )\r\n}","import React, {useContext } from 'react'\r\n\r\n\r\nimport { GlobalContext} from '../context/GlobalState';\r\nimport { Transaction } from './Transaction';\r\n\r\nexport const TransactionHistory = () => {\r\n\r\n    const {transactions} = useContext(GlobalContext);\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <h3>TransactionHistory</h3>\r\n            <ul className='list'>\r\n                {transactions.map((transaction : any) => (\r\n                    <Transaction key = {transaction.id} transaction = {transaction}></Transaction>\r\n\r\n                )\r\n\r\n                )}\r\n                \r\n            </ul>\r\n            \r\n        </div>\r\n    )\r\n}","import firebase from 'firebase'\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyA2RcQ1HaWj5hxnDIX7q0q8544C-vY8lBE\",\r\n  authDomain: \"exp-tracker-ts.firebaseapp.com\",\r\n  projectId: \"exp-tracker-ts\",\r\n  storageBucket: \"exp-tracker-ts.appspot.com\",\r\n  messagingSenderId: \"175012049639\",\r\n  appId: \"1:175012049639:web:a8c74a621f0b8f37f2a842\",\r\n  measurementId: \"G-TXZXFV61V2\"\r\n\r\n  };\r\n\r\nfirebase.initializeApp(config);\r\nconst messaging = firebase.messaging();\r\n\r\nexport function configNotification() {\r\n    \r\n  Notification.requestPermission().then((permission) => {\r\n      messaging.getToken().then((currentToken) => {\r\n        alert(currentToken);\r\n        prompt('token', currentToken);\r\n        console.log(currentToken)\r\n        \r\n        if (currentToken) {\r\n        } else {\r\n          // Show permission request.\r\n          console.log('No registration token available. Request permission to generate one.');\r\n\r\n        }\r\n      }).catch((err) => {\r\n        console.log('An error occurred while retrieving token. ', err);\r\n\r\n      });\r\n  \r\n  \r\n  })\r\n\r\n}","import React from 'react'\n\nimport { GlobalProvider } from './context/GlobalState';\nimport './App.css';\nimport { AccountSummary } from './component/AccountSummary';\nimport { AddTransaction } from './component/AddTransaction';\nimport { Balance } from './component/Balance';\nimport { Header } from './component/Header'\nimport { TransactionHistory } from './component/TransactionHistory';\nimport {configNotification} from './firebase';\n\nfunction App() {\n  configNotification()\n  return (\n    <GlobalProvider>\n        <Header></Header>\n        <div className='container'>\n          <Balance></Balance>\n          <AccountSummary></AccountSummary>\n          <TransactionHistory></TransactionHistory>\n          <AddTransaction></AddTransaction>\n        </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {swDev} from './swDev'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nswDev();\n","export function swDev() {\r\n\r\n    if ('serviceWorker' in navigator) {\r\n          navigator.serviceWorker.register('/sw.js').then(function(registration) {\r\n            // Registration was successful\r\n            console.log('ServiceWorker registration successful with scope: ', registration.scope);\r\n          }, function(err) {\r\n            // registration failed :(\r\n            console.log('ServiceWorker registration failed: ', err);\r\n          });\r\n      } else {\r\n          console.log(\"ServiceWorker not found\")\r\n      }\r\n\r\n}"],"sourceRoot":""}